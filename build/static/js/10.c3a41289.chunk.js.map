{"version":3,"sources":["hooks/use-input.js","components/UI/Card.jsx","components/UI/Card.module.css","components/Wallet/Address.module.css","components/Wallet/AddressActions.module.css","pages/Wallet.module.css","components/Actions/SendHu.module.css","components/Actions/MintHu.module.css","components/Actions/GetHu.module.css","components/Wallet/Address.jsx","components/Wallet/AddressActions.jsx","components/Actions/SendHu.jsx","components/Actions/MintHu.jsx","components/Actions/GetHu.jsx","pages/Wallet.jsx"],"names":["useInput","validateValue","useState","enteredValue","setEnteredValue","isTouched","setIsTouched","valueIsValid","value","isValid","hasError","valueChangeHandler","event","target","inputBlurHandler","reset","Card","children","className","classes","card","module","exports","Address","contractCtx","useContext","ContractContext","pubAddress","formatAddress","userAddress","balance","address","logo","src","alt","formatAmountToBalance","AddressActions","onChangeAction","type","onClick","SendHu","onExitModal","trxCtx","TransactionContext","sending","setSending","waitingForMetamaskConfirmation","setWaitingForMetamaskConfirmation","contract","trim","enteredAddress","addressIsValid","addressHasError","addressChangeHandler","addressBlurHandler","addressResetHandler","Number","enteredAmount","amountIsValid","amountHasError","amountChangeHandler","amountBlurHandler","amountResetHandler","enteredSenderName","senderNameIsValid","senderNameHasError","senderNameChangeHandler","senderNameBlurHandler","senderNameResetHandler","enteredDesc","descIsValid","descHasError","descChangeHandler","descBlurHandler","descResetHandler","submitHandler","e","a","preventDefault","console","log","transfer","formatBalanceToAmount","then","tx","wait","receipt","receiptToRecord","blockNumber","blockHash","transactionHash","success","from","rawReceipt","mid","to","message","amount","senderName","timeStamp","Date","now","fetch","method","headers","body","JSON","stringify","res","ok","json","jsonResponse","addTransaction","catch","err","getBalance","onSubmit","htmlFor","placeholder","id","onChange","onBlur","error","Loading","text","MintHu","process","mint","symbols","GetHu","copied","setCopied","copiedFixed","setCopiedFixed","copiedAddr","setCopiedAdrr","showCopy","setShowCopy","showCopyFixed","setShowCopyFixed","copy","setCopy","copyFixed","setCopyFixed","test","enteredName","nameIsValid","nameHasError","nameChangeHandler","nameBlurHandler","nameResetHandler","enteredNameFixed","nameFixedIsValid","nameFixedHasError","nameFixedChangeHandler","nameFixedBlurHandler","nameFixedResetHandler","enteredAmountFixed","amountFixedIsValid","amountFixedHasError","amountFixedChangeHandler","amountFixedBlurHandler","amountFixedResetHandler","enteredDescFixed","descFixedHasError","descFixedChangeHandler","descFixedBlurHandler","descFixedResetHandler","copyHandler","navigator","clipboard","writeText","setTimeout","option","link","undefined","window","location","origin","textToLink","coping","thanks","Wallet","action","setAction","changeAction","act","connected","wallet","Header","TrxHistory","Modal","Footer","NotConnected"],"mappings":"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","file":"static/js/10.c3a41289.chunk.js","sourcesContent":["import {useState } from 'react'\r\n\r\nconst useInput = (validateValue) => {\r\n  const [enteredValue, setEnteredValue] = useState('')\r\n  const [isTouched, setIsTouched] = useState(false)\r\n\r\n  const valueIsValid = validateValue(enteredValue);\r\n  const hasError = !valueIsValid && isTouched;\r\n\r\n  const valueChangeHandler = (event) => {\r\n      setEnteredValue(event.target.value)\r\n  }\r\n\r\n  const inputBlurHandler = (event) => {\r\n    setIsTouched(true)\r\n}\r\n\r\n    const reset = () => {\r\n        setEnteredValue('')\r\n        setIsTouched(false)\r\n    }\r\n\r\n  return {\r\n      value: enteredValue,\r\n      isValid: valueIsValid,\r\n      hasError,\r\n      valueChangeHandler,\r\n      inputBlurHandler,\r\n      reset,\r\n  }\r\n}\r\n\r\nexport default useInput","import React from 'react'\r\nimport classes from \"./Card.module.css\"\r\n\r\nconst Card = ({children, className}) => {\r\n  return (\r\n    <div className={`${classes.card} ${className || \"\"}`}>\r\n\r\n      <div className={classes[\"card-main\"]}>\r\n      {children}\r\n      </div>\r\n        \r\n\r\n        <div className={classes[\"hide-scroller\"]}></div>\r\n        <div className={classes[\"hide-scroller\"]}></div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Card","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__3avLa\",\"card-main\":\"Card_card-main___Y8qI\",\"hide-scroller\":\"Card_hide-scroller__2fqEk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"address\":\"Address_address__1BzO6\",\"logo\":\"Address_logo__3Phcr\",\"balance\":\"Address_balance__1mH5h\",\"pub-address\":\"Address_pub-address__3clW-\",\"pub-address-text\":\"Address_pub-address-text__2svns\",\"pub-address-copy\":\"Address_pub-address-copy__1uZ__\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"address-actions\":\"AddressActions_address-actions__27Rzh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wallet\":\"Wallet_wallet__Fmrnv\",\"wallet-main\":\"Wallet_wallet-main__24NlT\",\"activity-title\":\"Wallet_activity-title__2KiFs\",\"exit-modal\":\"Wallet_exit-modal__28Ail\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"SendHu_title__1c3ai\",\"balance\":\"SendHu_balance__5b2gS\",\"balance-reload\":\"SendHu_balance-reload__3Pc-H\",\"send-hu-form\":\"SendHu_send-hu-form__2IdWh\",\"error\":\"SendHu_error__2blJz\",\"waiting-confirmation\":\"SendHu_waiting-confirmation__2opd6\",\"metamask-logo\":\"SendHu_metamask-logo__16-N1\",\"rotate\":\"SendHu_rotate__EspJL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"MintHu_title__28PC5\",\"balance\":\"MintHu_balance__2fQym\",\"balance-reload\":\"MintHu_balance-reload___-OHS\",\"mint-hu-form\":\"MintHu_mint-hu-form__3qOIl\",\"error\":\"MintHu_error__2VyN4\",\"no-mint\":\"MintHu_no-mint__3LE55\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"GetHu_title__hfIS7\",\"option\":\"GetHu_option__GDtHl\",\"thanks\":\"GetHu_thanks__2gHqa\",\"copy-address\":\"GetHu_copy-address__YgdB4\",\"coping\":\"GetHu_coping__DiYXC\",\"error\":\"GetHu_error__1Co2a\"};","import React, { useContext } from \"react\";\r\nimport { IoMdCopy} from \"react-icons/io\"\r\nimport ContractContext from \"../../context/contract-context\";\r\nimport { formatAddress, formatAmountToBalance } from \"../../utils/walletUtils\";\r\nimport classes from \"./Address.module.css\";\r\n\r\nconst Address = () => {\r\n  const contractCtx = useContext(ContractContext)\r\n\r\n\r\n  const pubAddress = formatAddress(contractCtx.userAddress)\r\n  const balance = contractCtx.balance\r\n\r\n  return (\r\n    <div className={classes.address}>\r\n      <div className={classes.logo}>\r\n        <img src={\"/hu.png\"} alt={\"hucoin\"} />\r\n      </div>\r\n\r\n      <p className={classes.balance}>{formatAmountToBalance(balance)} HUC</p>\r\n      <div className={classes[\"pub-address\"]}>\r\n        <p className={classes[\"pub-address-text\"]}>\r\n          {pubAddress}\r\n        </p>\r\n        <div className={classes[\"pub-address-copy\"]}>\r\n          <IoMdCopy />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Address;\r\n","import React from 'react'\r\nimport classes from \"./AddressActions.module.css\"\r\n\r\nconst AddressActions = ({onChangeAction}) => {\r\n\r\n  const sendActionHandler = () => {\r\n    onChangeAction(\"send\")\r\n  }\r\n\r\n  const receiveActionHandler = () => {\r\n    onChangeAction(\"receive\")\r\n  }\r\n\r\n  const mintActionHandler = () => {\r\n    onChangeAction(\"mint\")\r\n  }\r\n\r\n  return (\r\n    <div className={classes[\"address-actions\"]}>\r\n        <button type={\"button\"} onClick={receiveActionHandler} >Get Hu</button>\r\n        <button type={\"button\"} onClick={sendActionHandler}>Send Hu</button>\r\n        <button type={\"button\"} onClick={mintActionHandler} >Mint Hu</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddressActions","import { useContext, useState } from \"react\";\r\nimport { AiOutlineReload } from \"react-icons/ai\";\r\nimport {formatAmountToBalance, formatBalanceToAmount } from \"../../utils/walletUtils\"\r\nimport useInput from \"../../hooks/use-input\";\r\nimport ContractContext from \"../../context/contract-context\";\r\nimport classes from \"./SendHu.module.css\";\r\nimport Card from \"../UI/Card\";\r\nimport Loading from \"../UI/Loading\";\r\nimport TransactionContext from \"../../context/trx-context\";\r\n\r\n/**\r\n * allowance, approve transfer, transferFrom, decreaseAllowance, increaseAllowance\\\r\n * 0x35B591b0cB23CCf98aD1D930fCd1d129c6ADCE3d\r\n * 0x5a89D7585EE663c2CE410eEb7070C0749CEA7CA5\r\n * 0xB27D522C0251CA702058178625747B2481A9De3E\r\n * P8aMAINLLPC7pBuC\r\n * https://api-goerli.etherscan.io/\r\n * UEIXVPFM2FIWHD5D7FGSZQFGEJ5SGWYRJF\r\n * https://api-goerli.etherscan.io/api?module=account&action=txlist&address=0xB27D522C0251CA702058178625747B2481A9De3E&startblock=0&endblock=99999999&page=1&offset=10&sort=asc&apikey=YourApiKeyToken\r\n */\r\n\r\nconst SendHu = ({onExitModal}) => {\r\n  const contractCtx = useContext(ContractContext);\r\n  const trxCtx = useContext(TransactionContext);\r\n  const [sending, setSending] = useState(false);\r\n  const [waitingForMetamaskConfirmation, setWaitingForMetamaskConfirmation] = useState(false);\r\n\r\n  const contract = contractCtx.contract;\r\n  const userAddress = contractCtx.userAddress;\r\n  const balance = contractCtx.balance;\r\n\r\n  const exitModalHandler = () => {\r\n    onExitModal(\"\")\r\n  }\r\n\r\n  const {\r\n    value: enteredAddress,\r\n    isValid: addressIsValid,\r\n    hasError: addressHasError,\r\n    valueChangeHandler: addressChangeHandler,\r\n    inputBlurHandler: addressBlurHandler,\r\n    reset: addressResetHandler,\r\n  } = useInput((value) => value.trim() !== \"\");\r\n\r\n  const {\r\n    value: enteredAmount,\r\n    isValid: amountIsValid,\r\n    hasError: amountHasError,\r\n    valueChangeHandler: amountChangeHandler,\r\n    inputBlurHandler: amountBlurHandler,\r\n    reset: amountResetHandler,\r\n  } = useInput((value) => ((value.trim() !== \"\") && (Number(value) <= formatAmountToBalance(balance)) && (Number(value) > 0) ));\r\n\r\n  const {\r\n    value: enteredSenderName,\r\n    isValid: senderNameIsValid,\r\n    hasError: senderNameHasError,\r\n    valueChangeHandler: senderNameChangeHandler,\r\n    inputBlurHandler: senderNameBlurHandler,\r\n    reset: senderNameResetHandler,\r\n  } = useInput((value) => value.trim() !== \"\");\r\n\r\n  const {\r\n    value: enteredDesc,\r\n    isValid: descIsValid,\r\n    hasError: descHasError,\r\n    valueChangeHandler: descChangeHandler,\r\n    inputBlurHandler: descBlurHandler,\r\n    reset: descResetHandler,\r\n  } = useInput((value) => true);\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const submitHandler = async (e) => {\r\n    e.preventDefault();\r\n\r\n    console.log(\"submitting\");\r\n\r\n    if (\r\n      !addressIsValid ||\r\n      !amountIsValid ||\r\n      !senderNameIsValid ||\r\n      !descIsValid\r\n    ) {\r\n      console.log(\r\n        \"Invalid input\",\r\n        enteredAddress,\r\n        enteredAmount,\r\n        enteredSenderName,\r\n        enteredDesc\r\n      );\r\n      return;\r\n    }\r\n\r\n    setWaitingForMetamaskConfirmation(true);\r\n\r\n    \r\n\r\n    \r\n    await contract\r\n      .transfer(enteredAddress, formatBalanceToAmount(enteredAmount))\r\n      .then(async (tx) => {\r\n        console.log(\"data: \", tx);\r\n\r\n        setSending(true)\r\n        setWaitingForMetamaskConfirmation(false)\r\n        console.log(\"Transfer Pending\");\r\n        await tx\r\n          .wait()\r\n          .then(async (receipt) => {\r\n\r\n            console.log(\"Transaction Success\");\r\n\r\n            const receiptToRecord = {\r\n              blockNumber: receipt.blockNumber,\r\n              blockHash: receipt.blockHash,\r\n              transactionHash: receipt.transactionHash,\r\n              success: receipt.success,\r\n              from: receipt.rawReceipt.from,\r\n              mid: receipt.rawReceipt.to,\r\n              to: enteredAddress,\r\n              message: enteredDesc || \"\",\r\n              amount: formatBalanceToAmount(enteredAmount),\r\n              senderName: enteredSenderName || \"Anonymous\",\r\n              timeStamp: `${(+ Date.now())}`,\r\n            };\r\n            \r\n            console.log(\"Sending To DB\");\r\n            await fetch(\"/api/trx/add-trx\", {\r\n              method: \"post\",\r\n              headers: { \"Content-Type\": \"application/json\" },\r\n              body: JSON.stringify(receiptToRecord),\r\n            })\r\n              .then((res) => {\r\n                if (res.ok) {\r\n                  console.log(\"receipt added to DB\");\r\n                  return res.json();\r\n                }\r\n              })\r\n              .then((jsonResponse) => {\r\n                console.log(\"Adding Trx\");\r\n                trxCtx.addTransaction(receiptToRecord);\r\n                return jsonResponse;\r\n\r\n              })\r\n              .catch((err) => {\r\n                console.log(err);\r\n              });\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n        \r\n\r\n        \r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n\r\n    await contractCtx.getBalance()\r\n      .then(res => {\r\n        console.log(\"getting balance: \", res)\r\n      }).catch(err => {\r\n        console.log(err)\r\n      });\r\n    \r\n\r\n    setSending(false);\r\n\r\n    addressResetHandler();\r\n    amountResetHandler();\r\n    senderNameResetHandler();\r\n    descResetHandler();\r\n    exitModalHandler();\r\n  };\r\n  \r\n  const getBalance = () => {\r\n    contractCtx.getBalance()\r\n  };\r\n\r\n  return (\r\n    <Card className={classes[\"send-hu\"]}>\r\n      <h1 className={classes[\"title\"]}>Send Hu</h1>\r\n\r\n      <div className={classes.balance}>\r\n        <p>Balance: {formatAmountToBalance(balance)} HUC </p>\r\n        <span className={classes[\"balance-reload\"]} onClick={getBalance}>\r\n          <AiOutlineReload />\r\n        </span>\r\n      </div>\r\n\r\n      {(!sending && !waitingForMetamaskConfirmation) && <form className={classes[\"send-hu-form\"]} onSubmit={submitHandler}>\r\n        <label htmlFor=\"sendeeAddress\">Address</label>\r\n        <input\r\n          type=\"text\"\r\n          value={enteredAddress}\r\n          placeholder=\"0x00000000000\"\r\n          id=\"sendeeAddress\"\r\n          onChange={addressChangeHandler}\r\n          onBlur={addressBlurHandler}\r\n        />\r\n        {addressHasError && <p className={classes.error}>Invalid address</p>}\r\n\r\n        <label htmlFor=\"sendamount\">Amount</label>\r\n        <input\r\n          type=\"number\"\r\n          value={enteredAmount}\r\n          placeholder=\"0.23\"\r\n          id=\"sendamount\"\r\n          onChange={amountChangeHandler}\r\n          onBlur={amountBlurHandler}\r\n        />\r\n        {amountHasError && <p className={classes.error}>Invalid Amount</p>}\r\n\r\n        <label htmlFor=\"sendername\">Name</label>\r\n        <input\r\n          type=\"text\"\r\n          value={enteredSenderName}\r\n          id=\"senderame\"\r\n          placeholder=\"Fred\"\r\n          onChange={senderNameChangeHandler}\r\n          onBlur={senderNameBlurHandler}\r\n        />\r\n        {senderNameHasError && <p className={classes.error}>Please Add a Custom Name</p>}\r\n\r\n        <label htmlFor=\"trxdescription\">Description</label>\r\n        <textarea\r\n          id=\"trxdescription\"\r\n          placeholder=\"Thanks for the food!\"\r\n          value={enteredDesc || \"\"}\r\n          onChange={descChangeHandler}\r\n          onBlur={descBlurHandler}\r\n        ></textarea>\r\n        {descHasError && <p className={classes.error}>Invalid message</p>}\r\n\r\n        <button type=\"submit\">Send</button>\r\n      </form>}\r\n\r\n      {waitingForMetamaskConfirmation && (\r\n        <div className={classes[\"waiting-confirmation\"]}>\r\n        <div className={classes[\"metamask-logo\"]}>\r\n          <img src={\"/MetaMask.png\"} alt={\"Confirm on Metamask\"} />\r\n        </div>\r\n        <Loading text={\"MetaMask Should Pupop, Please Confirm on Metamask\"} />\r\n        </div>\r\n        \r\n      )}\r\n\r\n      {sending && (\r\n        <div className={classes[\"waiting-confirmation\"]}>\r\n        \r\n        <Loading text={\"Transaction Pending In Blockchain\"} />\r\n        </div>\r\n        \r\n      )}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default SendHu;\r\n","import { useContext, useState } from \"react\";\r\nimport useInput from \"../../hooks/use-input\";\r\nimport {formatAmountToBalance, formatBalanceToAmount } from \"../../utils/walletUtils\"\r\nimport { AiOutlineReload } from \"react-icons/ai\";\r\nimport ContractContext from \"../../context/contract-context\";\r\nimport classes from \"./MintHu.module.css\";\r\nimport Card from \"../UI/Card\";\r\nimport Loading from \"../UI/Loading\";\r\nimport TransactionContext from \"../../context/trx-context\";\r\n\r\nconst MintHu = ({onExitModal}) => {\r\n  const contractCtx = useContext(ContractContext);\r\n  const trxCtx = useContext(TransactionContext);\r\n  const [sending, setSending] = useState(false);\r\n  const [waitingForMetamaskConfirmation, setWaitingForMetamaskConfirmation] = useState(false);\r\n\r\n  const contract = contractCtx.contract;\r\n  const userAddress = contractCtx.userAddress;\r\n  const balance = contractCtx.balance;\r\n\r\n\r\n  const exitModalHandler = () => {\r\n    onExitModal(\"\")\r\n  }\r\n\r\n\r\n  const {\r\n    value: enteredAmount,\r\n    isValid: amountIsValid,\r\n    hasError: amountHasError,\r\n    valueChangeHandler: amountChangeHandler,\r\n    inputBlurHandler: amountBlurHandler,\r\n    reset: amountResetHandler,\r\n  } = useInput((value) => ((value.trim() !== \"\") && (Number(value) <= formatAmountToBalance(balance)) && (Number(value) > 0) ));\r\n\r\n  const {\r\n    value: enteredSenderName,\r\n    isValid: senderNameIsValid,\r\n    hasError: senderNameHasError,\r\n    valueChangeHandler: senderNameChangeHandler,\r\n    inputBlurHandler: senderNameBlurHandler,\r\n    reset: senderNameResetHandler,\r\n  } = useInput((value) => value.trim() !== \"\");\r\n\r\n  const {\r\n    value: enteredDesc,\r\n    isValid: descIsValid,\r\n    hasError: descHasError,\r\n    valueChangeHandler: descChangeHandler,\r\n    inputBlurHandler: descBlurHandler,\r\n    reset: descResetHandler,\r\n  } = useInput((value) => true);\r\n\r\n  const submitHandler = async (e) => {\r\n    e.preventDefault();\r\n\r\n    console.log(\"submitting\");\r\n\r\n    if (\r\n      !amountIsValid ||\r\n      !senderNameIsValid ||\r\n      !descIsValid ||\r\n      !(process.env.REACT_APP_CREATOR === userAddress)\r\n    ) {\r\n      console.log(\r\n        \"Invalid input\",\r\n        enteredAmount,\r\n        enteredSenderName,\r\n        enteredDesc\r\n      );\r\n      return;\r\n    }\r\n\r\n    setWaitingForMetamaskConfirmation(true);\r\n\r\n    console.log(\"mint started: confim Metamask\");\r\n    const trx = await contract\r\n      .mint(userAddress, enteredAmount)\r\n      .then(async (tx) => {\r\n        console.log(\"data: \", tx);\r\n\r\n        setSending(true)\r\n        setWaitingForMetamaskConfirmation(false)\r\n        console.log(\"Mint Pending\");\r\n        await tx\r\n          .wait()\r\n          .then(async receipt => {\r\n            console.log(\"Mint Transaction Success\");\r\n\r\n        const receiptToRecord = {\r\n          blockNumber: receipt.blockNumber,\r\n          blockHash: receipt.blockHash,\r\n          transactionHash: receipt.transactionHash,\r\n          success: receipt.success,\r\n          from: receipt.rawReceipt.from,\r\n          mid: receipt.rawReceipt.to,\r\n          to: userAddress,\r\n          message: enteredDesc || \"\",\r\n          amount: formatBalanceToAmount(enteredAmount),\r\n          senderName: enteredSenderName || \"Anonymous\",\r\n          timeStamp: `${(+ Date.now())}`,\r\n        };\r\n\r\n        console.log(\"Sending To DB\");\r\n        await fetch(\"/api/trx/add-trx\", {\r\n          method: \"post\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify(receiptToRecord),\r\n        })\r\n          .then((res) => {\r\n            if (res.ok) {\r\n              console.log(\"receipt added to DB\");\r\n              return res.json();\r\n            }\r\n          })\r\n          .then((jsonResponse) => {\r\n            console.log(jsonResponse);\r\n            trxCtx.addTransaction(receiptToRecord);\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n\r\n        \r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n\r\n\r\n      await contractCtx.getBalance()\r\n      .then(res => {\r\n        console.log(\"getting balance: \", res)\r\n      }).catch(err => {\r\n        console.log(err)\r\n      });\r\n    \r\n\r\n    setSending(false);\r\n    \r\n\r\n    amountResetHandler();\r\n    senderNameResetHandler();\r\n    descResetHandler();\r\n    exitModalHandler();\r\n  };\r\n\r\n \r\n  const getBalance = () => {\r\n    contractCtx.getBalance()\r\n  };\r\n\r\n\r\n  return (\r\n    <Card className={classes[\"mint-hu\"]}>\r\n      <h1 className={classes[\"title\"]}>Mint Hu</h1>\r\n\r\n      <div className={classes.balance}>\r\n        <p>Balance: {formatAmountToBalance(balance)} HUC </p>\r\n        <span className={classes[\"balance-reload\"]} onClick={getBalance}>\r\n          <AiOutlineReload />\r\n        </span>\r\n      </div>\r\n\r\n      <div className={classes[\"no-mint\"]}>\r\n        <em>Notice: Minting Feature is only allowed by the Token Creator! This 'Mint' Option is only opened for display because of the Bunzz Hackathon.</em>\r\n      </div>\r\n\r\n      {(!sending && !waitingForMetamaskConfirmation) && <form className={classes[\"mint-hu-form\"]} onSubmit={submitHandler}>\r\n\r\n        <label htmlFor=\"sendamount\">Amount</label>\r\n        <input\r\n          type=\"number\"\r\n          value={enteredAmount}\r\n          placeholder=\"0.23\"\r\n          id=\"sendamount\"\r\n          onChange={amountChangeHandler}\r\n          onBlur={amountBlurHandler}\r\n        />\r\n        {amountHasError && <p className={classes.error}>Invalid Amount</p>}\r\n\r\n        <label htmlFor=\"sendername\">Name</label>\r\n        <input\r\n          type=\"text\"\r\n          value={enteredSenderName}\r\n          id=\"senderame\"\r\n          placeholder=\"Fred\"\r\n          onChange={senderNameChangeHandler}\r\n          onBlur={senderNameBlurHandler}\r\n        />\r\n        {senderNameHasError && <p className={classes.error}>Please Add a Custom Name</p>}\r\n\r\n        <label htmlFor=\"trxdescription\">Description</label>\r\n        <textarea\r\n          id=\"trxdescription\"\r\n          placeholder=\"Thanks for the food!\"\r\n          value={enteredDesc || \"\"}\r\n          onChange={descChangeHandler}\r\n          onBlur={descBlurHandler}\r\n        ></textarea>\r\n        {descHasError && <p className={classes.error}>Invalid message</p>}\r\n\r\n        <button type=\"submit\" >Send</button>\r\n      </form>}\r\n\r\n\r\n      {waitingForMetamaskConfirmation && (\r\n        <div className={classes[\"waiting-confirmation\"]}>\r\n        <div className={classes[\"metamask-logo\"]}>\r\n          <img src={\"/MetaMask.png\"} alt={\"Confirm on Metamask\"} />\r\n        </div>\r\n        <Loading text={\"MetaMask Should Pupop, Please Confirm on Metamask\"} />\r\n        </div>\r\n        \r\n      )}\r\n\r\n      {sending && (\r\n        <div className={classes[\"waiting-confirmation\"]}>\r\n        \r\n        <Loading text={\"Transaction Pending In Blockchain\"} />\r\n        </div>\r\n        \r\n      )}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default MintHu;\r\n","import React, { useContext, useState } from \"react\";\r\nimport ContractContext from \"../../context/contract-context\";\r\nimport useInput from \"../../hooks/use-input\";\r\nimport { formatAddress, formatBalanceToAmount, textToLink } from \"../../utils/walletUtils\";\r\nimport Card from \"../UI/Card\";\r\nimport classes from \"./GetHu.module.css\";\r\n\r\nconst symbols = /[+!?*^%$#&()@~]/\r\n\r\nconst GetHu = () => {\r\n\r\n  const [copied, setCopied] = useState(false);\r\n  const [copiedFixed, setCopiedFixed] = useState(false);\r\n  const [copiedAddr, setCopiedAdrr] = useState(false);\r\n  const [showCopy, setShowCopy] = useState(false);\r\n  const [showCopyFixed, setShowCopyFixed] = useState(false);\r\n  const [copy, setCopy] = useState(\"\");\r\n  const [copyFixed, setCopyFixed] = useState(\"\");\r\n  const contractCtx = useContext(ContractContext);\r\n\r\n  const userAddress = contractCtx.userAddress;\r\n\r\n\r\n  const {\r\n    value: enteredName,\r\n    isValid: nameIsValid,\r\n    hasError: nameHasError,\r\n    valueChangeHandler: nameChangeHandler,\r\n    inputBlurHandler: nameBlurHandler,\r\n    reset: nameResetHandler,\r\n  } = useInput((value) => (value.trim() !== \"\") && (!symbols.test(value)));\r\n\r\n  const {\r\n    value: enteredDesc,\r\n    isValid: descIsValid,\r\n    hasError: descHasError,\r\n    valueChangeHandler: descChangeHandler,\r\n    inputBlurHandler: descBlurHandler,\r\n    reset: descResetHandler,\r\n  } = useInput((value) => true);\r\n\r\n\r\n  const {\r\n    value: enteredNameFixed,\r\n    isValid: nameFixedIsValid,\r\n    hasError: nameFixedHasError,\r\n    valueChangeHandler: nameFixedChangeHandler,\r\n    inputBlurHandler: nameFixedBlurHandler,\r\n    reset: nameFixedResetHandler,\r\n  } = useInput((value) => (value.trim() !== \"\") && (!symbols.test(value)));\r\n\r\n  const {\r\n    value: enteredAmountFixed,\r\n    isValid: amountFixedIsValid,\r\n    hasError: amountFixedHasError,\r\n    valueChangeHandler: amountFixedChangeHandler,\r\n    inputBlurHandler: amountFixedBlurHandler,\r\n    reset: amountFixedResetHandler,\r\n  } = useInput((value) => ((value.trim() !== \"\") && (!!Number(value))));\r\n\r\n  const {\r\n    value: enteredDescFixed,\r\n    isValid: descFixedIsValid,\r\n    hasError: descFixedHasError,\r\n    valueChangeHandler: descFixedChangeHandler,\r\n    inputBlurHandler: descFixedBlurHandler,\r\n    reset: descFixedResetHandler,\r\n  } = useInput((value) => true);\r\n\r\n  const copyHandler = (type) => {\r\n\r\n    if (type === \"copy\") {\r\n      navigator.clipboard.writeText(copy);\r\n\r\n\r\n        setCopied(true)\r\n\r\n        setTimeout(() => {\r\n                  setCopied(false)\r\n                  setShowCopy(false)\r\n        }, 3000);\r\n    }\r\n\r\n    if (type === \"copy-fixed\") {\r\n      navigator.clipboard.writeText(copyFixed);\r\n\r\n\r\n        setCopiedFixed(true)\r\n\r\n        setTimeout(() => {\r\n                  setCopiedFixed(false)\r\n                  setShowCopyFixed(false)\r\n        }, 3000);\r\n    }\r\n\r\n    if (type === \"copy-addr\") {\r\n      navigator.clipboard.writeText(copy);\r\n\r\n\r\n      setCopiedAdrr(true)\r\n\r\n        setTimeout(() => {\r\n          setCopiedAdrr(false)\r\n        }, 3000);\r\n    }\r\n    \r\n  }\r\n\r\n\r\n  \r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!nameIsValid) {\r\n      return\r\n    }\r\n\r\n    let link;\r\n\r\n\r\n    if (typeof window !== undefined) {\r\n      link = `${window.location.origin}/send-me-hu/share/${userAddress}/${textToLink(enteredName)}/?desc=${textToLink(enteredDesc)}`\r\n    }\r\n    else {\r\n      return\r\n    }\r\n    \r\n\r\n    setCopy(link)\r\n    setShowCopy(true)\r\n\r\n    nameResetHandler();\r\n    descResetHandler();\r\n  }\r\n\r\n  const submitHandlerFixed = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!nameFixedIsValid || !amountFixedIsValid) {\r\n      console.log(\"wrong\")\r\n      return\r\n    }\r\n\r\n    let link;\r\n\r\n\r\n    if (typeof window !== undefined) {\r\n      link = `${window.location.origin}/send-me-hu/share-fixed/${userAddress}/${textToLink(enteredNameFixed)}/${formatBalanceToAmount(enteredAmountFixed)}/?desc=${textToLink(enteredDesc)}`\r\n    } else {\r\n      return\r\n    }\r\n\r\n    setCopyFixed(link)\r\n    setShowCopyFixed(true)\r\n\r\n    nameFixedResetHandler();\r\n    amountFixedResetHandler();\r\n    descFixedResetHandler();\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <Card>\r\n      <h1 className={classes[\"title\"]}>Get Hu</h1>\r\n\r\n      <div className={classes.option}>\r\n        <h4>Share Link</h4>\r\n       {!showCopy && <form onSubmit={submitHandler}>\r\n        <label htmlFor=\"send-me-name\"> \r\n          Custom Name\r\n        </label>\r\n        <input value={enteredName} type={\"text\"} placeholder={\"Stacy\"} id={\"send-me-name\"} onChange={nameChangeHandler} onBlur={nameBlurHandler} />\r\n        {nameHasError && <p className={classes.error}>Please Input a valid custom name e.g. Precious</p>}\r\n        <label htmlFor=\"send-me-desc\"> \r\n          Message (optional)\r\n        </label>\r\n        <input value={enteredDesc} type={\"text\"} placeholder={\"Donate to support stacy!\"} id={\"send-me-desc\"} onChange={descChangeHandler} onBlur={descBlurHandler} />\r\n        {descHasError && <p className={classes.error}>Invalid Description</p>}\r\n        <button type=\"submit\" >Create</button>\r\n        </form>}\r\n\r\n        {showCopy && <div className={classes.coping}>\r\n            <p>{copy}</p>\r\n            <button type={\"button\"} onClick={() => copyHandler(\"copy\")}>{`${copied ? \"Copied\" : \"Copy\"}`}</button>\r\n          </div>}\r\n      </div>\r\n\r\n      <div className={classes.option}>\r\n        <h4>Share Link with Fixed Amount</h4>\r\n        {!showCopyFixed && <form onSubmit={submitHandlerFixed}>\r\n        <label htmlFor=\"send-me-name\"> \r\n          Custom Name\r\n        </label>\r\n        <input type={\"text\"} value={enteredNameFixed} placeholder={\"Stacy\"} id={\"send-me-name\"} onChange={nameFixedChangeHandler} onBlur={nameFixedBlurHandler} />\r\n        {nameFixedHasError && <p className={classes.error}>Please Input a valid custom name e.g. Precious</p>}\r\n        <label htmlFor=\"send-me-amount\"> \r\n          Amount\r\n        </label>\r\n        <input type={\"text\"} value={enteredAmountFixed} placeholder={\"0.36789\"} id={\"send-me-amount\"} onChange={amountFixedChangeHandler} onBlur={amountFixedBlurHandler} />\r\n        {amountFixedHasError && <p className={classes.error}>Please Input a valid amount e.g. 300</p>}\r\n        <label htmlFor=\"send-me-desc\"> \r\n          Message (optional)\r\n        </label>\r\n        <input type={\"text\"} value={enteredDescFixed} placeholder={\"Pay for Rice and Stew\"} id={\"send-me-desc\"} onChange={descFixedChangeHandler} onBlur={descFixedBlurHandler} />\r\n        {descFixedHasError && <p className={classes.error}>Invalid Description</p>}\r\n        <button type=\"submit\" >Create</button>\r\n        </form>}\r\n        {showCopyFixed && <div className={classes.coping}>\r\n            <p>{copyFixed}</p>\r\n            <button type={\"button\"} onClick={() => copyHandler(\"copy-fixed\")}>{`${copiedFixed ? \"Copied\" : \"Copy\"}`}</button>\r\n          </div>}\r\n      </div>\r\n\r\n      <div className={classes.option}>\r\n        <h4>Share Wallet Address</h4>\r\n        <div className={classes[\"copy-address\"]}>\r\n        <p>Public Address: {formatAddress(userAddress)}</p>\r\n        <button type=\"button\" onClick={() => copyHandler(\"copy-addr\")} >{`${copiedAddr ? \"Copied\" : \"Copy\"}`}</button>\r\n        </div>\r\n        \r\n      </div>\r\n\r\n      <p className={classes.thanks}>Thanks for using hupay</p>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default GetHu;\r\n","import React, { useContext, useState } from 'react';\r\nimport TrxHistory from '../components/Transactions/TrxHistory';\r\nimport Header from '../components/Layout/Header';\r\nimport Footer from '../components/Layout/Footer';\r\nimport Address from '../components/Wallet/Address';\r\nimport AddressActions from '../components/Wallet/AddressActions';\r\nimport classes from \"./Wallet.module.css\"\r\nimport Modal from '../components/UI/Modal';\r\nimport SendHu from '../components/Actions/SendHu';\r\nimport MintHu from '../components/Actions/MintHu';\r\nimport GetHu from '../components/Actions/GetHu';\r\nimport ContractContext from '../context/contract-context';\r\nimport NotConnected from '../components/Errors/NotConnected';\r\n\r\nconst Wallet = () => {\r\n  const contractCtx = useContext(ContractContext);\r\n\r\n  const [action, setAction] = useState(\"\");\r\n\r\n  const changeAction = (act) => {\r\n    setAction(act);\r\n  }\r\n\r\n  const exitModalHandler = () => {\r\n    setAction(\"\");\r\n  } \r\n\r\n  if (!contractCtx.connected) {\r\n    return (\r\n      <section className={classes.wallet}>\r\n    <Header />\r\n        <div className={classes[\"wallet-main\"]}>\r\n          <NotConnected />\r\n        </div>\r\n        \r\n    <Footer />\r\n    </section>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <section className={classes.wallet}>\r\n\r\n\r\n    <Header />\r\n        <div className={classes[\"wallet-main\"]}>\r\n        <Address />\r\n        <AddressActions onChangeAction={changeAction} />\r\n        <h2 className={classes[\"activity-title\"]}>\r\n          Activity\r\n        </h2>\r\n        <TrxHistory />\r\n        </div>\r\n        {!!action && <Modal>\r\n          <div className={classes[\"exit-modal\"]} onClick={exitModalHandler}>\r\n            &times;\r\n          </div>\r\n          {(action === \"send\") && <SendHu onExitModal={changeAction} />}\r\n          {(action === \"mint\") && <MintHu onExitModal={changeAction} />}\r\n          {(action === \"receive\") && <GetHu onExitModal={changeAction} />}\r\n        </Modal>}\r\n    <Footer />\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Wallet"],"sourceRoot":""}